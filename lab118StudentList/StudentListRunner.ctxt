#BlueJ class context
comment0.target=StudentListRunner
comment1.params=
comment1.target=void\ main()
comment10.params=
comment10.target=void\ sortList()
comment11.params=
comment11.target=void\ printStudentInput()
comment11.text=\r\n\ This\ will\ ask\ for\ a\ student\ and\ then\ print\ the\ information\ for\ it\r\n
comment12.params=
comment12.target=void\ clearScreen()
comment12.text=\r\n\ This\ will\ clear\ the\ screen\r\n
comment13.params=a\ n
comment13.target=void\ mergeSortInt(int[],\ int)
comment14.params=a\ l\ r\ left\ right
comment14.target=void\ mergeInt(int[],\ int[],\ int[],\ int,\ int)
comment15.params=a\ n
comment15.target=void\ mergeSort(Student[],\ int)
comment16.params=a\ l\ r\ left\ right
comment16.target=void\ merge(Student[],\ Student[],\ Student[],\ int,\ int)
comment2.params=
comment2.target=void\ giveList()
comment2.text=\r\n\ this\ method\ can\ be\ run\ over\ and\ over\ to\ increase\ reusablility\r\n
comment3.params=arr\ l\ r\ x
comment3.target=int\ binarySearch(Student[],\ int,\ int,\ int)
comment4.params=
comment4.target=void\ searchStudent()
comment4.text=\r\n\ This\ prints\ every\ student\r\n
comment5.params=
comment5.target=void\ addPre()
comment6.params=
comment6.target=void\ printAllInput()
comment6.text=\r\n\ This\ prints\ every\ student\r\n
comment7.params=
comment7.target=void\ addStudentInput()
comment7.text=\r\n\ This\ will\ ask\ for\ usr\ input\ and\ parse\ it\ into\ a\ student\ object\ in\ an\ arraylist\ \r\n
comment8.params=
comment8.target=void\ editStudentInput()
comment8.text=\r\n\ This\ will\ ask\ for\ a\ student\ and\ then\ a\ value\ to\ replace\ and\ will\ send\ it\ to\ the\ student\ list\ to\ parse\r\n
comment9.params=
comment9.target=void\ deleteStudentInput()
comment9.text=\r\n\ This\ will\ ask\ for\ a\ student\ then\ delete\ it\r\n
numComments=17
